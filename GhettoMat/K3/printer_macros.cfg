[gcode_macro _global_variables]
variable_verbose:     True  # Enable verbose output
gcode:

[gcode_macro START_PRINT]
#   Superslicer start gcode:
# M104 S0 ; Stops PS/SS from sending temp waits separately
# M140 S0
# START_PRINT T_BED={first_layer_bed_temperature[0]} T_EXTRUDER={first_layer_temperature[0]}
gcode:
    {% set bed_temp = params.T_BED|default(65)|float %}
    {% set extruder_temp = params.T_EXTRUDER|default(190)|float %}
    BED_MESH_CLEAR
    COND_Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    SET_PIN PIN=lights VALUE=.7
    G28 Z
    G90
    G1 Z50 F3000                   ; move nozzle away from bed
    # Hang out over the purge bucket
    PURGE_MOVE
    # If the hotend is already kinda hot, keep it where it is
    {% if printer.extruder.temperature > extruder_temp*0.5 %}
        M104 S{printer.extruder.temperature}
    {% endif %}
    # Start bed heating and continue
    M140 S{bed_temp}
    {% if printer.heater_bed.temperature < bed_temp|float*0.85 %}
        M190 S{bed_temp|float*0.85} # wait till 0.85 of bed temp is reached, then continue  
    {% endif %}
    M140 S{bed_temp} 
    M104 S{extruder_temp}
    # Wait
    M190 S{bed_temp}
    M109 S{extruder_temp}
    PURGE

[gcode_macro PRINT_END]
#   Superslicer end gcode:
# PRINT_END
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 ; disable extruder motor - this is what we use to trigger the controller fan timeout
    M107                           ; turn off fan
    PARK_IT
    SET_PIN PIN=lights VALUE=.1

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  M107
  TURN_OFF_HEATERS
  PARK_IT
  CANCEL_PRINT_BASE
  
[gcode_macro PARK_IT]
gcode:
  {% set zH = 100 %}
  # Move the bed down
  {% if printer.toolhead.position.z > zH %}
    {% set zH = printer.toolhead.position.z + 1 %}
  {% endif %}
  G90                           ; absolute positioning
  G0  X90 Y180 Z{zH} F3600      ; park nozzle at rear and drop the bed to at least 50

[gcode_macro ACCEL_TEST]
description: Test given accel values acorss bed
gcode:
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set min_x = 0 %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set min_y = 0 %}

    # test config
    {% set config = {
      'accel'          : params.ACCEL|default(2500)|int,	# Test accel mm^2/sec
      'speed'          : params.SPEED|default(100)|int,		# Test speed mm/sec
      'wait'           : params.WAIT_MS|default(500)|int,	# Wait mSec between runs
      'x_padding'      : params.XPAD|default(5)|float,  	# padding around min/max x
      'y_padding'      : params.YPAD|default(5)|float,  	# padding around min/max y
    } %}

    SAVE_GCODE_STATE NAME=STATE_ACCEL_TEST

    M220 S100 							# Reset any scaling factors
    M221 S100 							# Reset any scaling factors

    # remove any exisiting clever stuff
    SET_VELOCITY_LIMIT VELOCITY={config.speed} ACCEL={config.accel} ACCEL_TO_DECEL={config.accel}
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

    G1 F{config.speed * 60}
    M204 S{config.accel}

    M117 {config.speed}@{config.accel} X stepper
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G1 X{max_x-config.x_padding} Y{max_y-config.y_padding}
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} Y stepper
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} XY moves
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} Done

    RESTORE_GCODE_STATE NAME=STATE_ACCEL_TEST

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E15 F300                    ; quickly load filament to heatbreak
   G1 E70 F150                    ; slower extrusion for hotend path
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-120 F1200                  ; retract filament completely
   M82                            ; set extruder to absolute

[gcode_macro PA_CAL]
# Pressure Advance Simple Test macro.
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.0 PA_STOP=0.1 NZL=0.4
# Or with no parameters, this would execute the same as
# PA_CAL BED=99 EXTRUDER=239 PA_START=0.0 PA_STOP=0.1 NZL=(as per printer.cfg)
# First prints a line with current set PA, then prints 21 additional line segments
# starting with PA_START, and increasing to PA_STOP.
# Based http://realdeuce.github.io/Voron/PA/pressure_advance.html
# Assisted by u/imoftendisgruntled, u/scul86, and thanks to u/beansisfat, u/stray_r

description: Tune Pressure Advance
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED = params.BED|default(99)|float %}
        {% set EXTRUDER = params.EXTRUDER|default(239)|float %}
        {% set PA_START = params.PA_START|default(0.0)|float %}
        {% set PA_STOP = params.PA_STOP|default(0.1)|float %}
        {% set PA_STEP = (PA_STOP - PA_START) / 20 |float %}
        {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
        {% set NZL = params.NZL|default(NZL_CFG)|float %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

        START_PRINT T_BED={BED} T_EXTRUDER={EXTRUDER}
		
        G21 ; Millimeter units
        G90 ; Absolute XYZ
        M83 ; Relative E
        ;SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500 ; And then you don't UNSET it? Whhhhyyyyy? Why would you not tune PA under your printing conditions?
        G92 E0
        M106 S0 
		
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000          ; move to start position
        G1 Z0.25                                 ; move to layer height
        G1 E0.75 F1800                                 ; un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F1800     ; print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F15000    ; print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F1800     ; print line part three
        G1 E-0.75 F1800                                ; retract
        G1 Z1                                    ; Move above layer height  
		
        {% for i in range(0, 20) %}
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}, increased PA by {PA_STEP}.
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
            G1 Z0.25                                         ; move to layer height
            G1 E0.75 F1800                                        ; un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F1800      ; print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F15000     ; print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F1800      ; print line part three
            G1 E-0.75 F1800                                       ; retract
            G1 Z1                                         ; Move above layer height  
        {% endfor %}

        M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
		
        PRINT_END
		
    {% endif %}


