# Liberated from GhettoMat August 2021
# Original license unknown
# Uploaded by Sitting.duc
# my efforts all CC-BY-SA-3.0
#---+++----

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}

    FRAME_LEDS COLOUR=yellow
    #SET_GCODE_VARIABLE MACRO=Magprobe_Variables VARIABLE=consecutive_probing VALUE=True
    DUC_MESH   ; home all and adjust gantry compensation, generate new bed mesh too
    ;BED_MESH_CALIBRATE ; generate new bed mesh 7x7 for this print
    #BED_MESH_PROFILE LOAD=default  ; restore our last bed mesh
    #DOCK_PROBE                     ; duc: guarantee probe is not on toolhead before printing
    clean_nozzle                   ; nozzle brush
    #SET_GCODE_VARIABLE MACRO=Magprobe_Variables VARIABLE=consecutive_probing VALUE=False
    G0 X{max_x/2} Y{max_y/2} Z30 F5400 ; journey to the centre of the print surface
    G92 E0.0                       ; reset e count
    #purge_nozzle                   ; draw line along the front of the bed
    # duc: clear the "cleaned" message. note no whitespace after command
    M117
    M400
    FRAME_LEDS COLOUR=white


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # find our boundaries
    {% set act_z = printer.toolhead.position.z|float %}
    {% set act_y = printer.toolhead.position.y|float %}
    {% set act_x = printer.toolhead.position.x|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    # find a safe distance we can move without hitting those boundaries
    {% if act_x < max_x - 20 %}
      {% set safe_x = 20 %}
    {% else %}
      {% set safe_x = max_x - act_x %}
    {% endif %}
    {% if act_y < max_y - 20 %}
      {% set safe_y = 20 %}
    {% else %}
      {% set safe_y = max_y - act_y %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=Magprobe_Variables VARIABLE=consecutive_probing VALUE=False
    M400                           ; wait for buffer to clear
    FRAME_LEDS COLOUR=blue
    TURN_OFF_HEATERS               ; turn off heaters before moving in case the move commands crash
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    
    G0 Z1.00 X{safe_x} Y{safe_y} F20000    ; move nozzle to remove stringing
    M107                           ; turn off fan
    {% if act_z < 30 %}
      G1 Z30 F3000                 ; move nozzle up 30mm (less 1mm earlier)
    {% else %}
      G1 Z2 F3000                  ; move nozzle up 2mm
    {% endif %}
    G90                            ; absolute positioning
    G0  X{max_x/2} Y{max_y-10} F3600  ; park nozzle at rear
    M400                           ; wait for buffer to clear


# draws a purge line at the front of the bed, Prusa-style
[gcode_macro PURGE_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=purge_state
    M83
    G1 X15 Y0 Z0.3 F3000.0
    G92 E0.0
    G1 E4 ; Purge Bubble
    G1 X60.0 E7.0  F1000.0 ; intro line
    G1 X100.0 E12  F1000.0 ; intro line
    G92 E0.0
    RESTORE_GCODE_STATE NAME=purge_state     


[gcode_macro PREHEAT]
gcode:
    ;""" Idea. Warm nozzle to a point below drooling, because nozzles heat fast
    ; Warm bed to precise because bed heats slow
    ; G28, QGL, park nozzle in middle of bed (to warm chamber evenly)
    ; part fan on 30% to blow some of the nozzle heat into the chamber and warm up faster
    ; """
    {% if 'PLA' in params %}    ; = PLA =
      M104 S190                 ; nozzle to 190C
      M140 S60                  ; bed to 60C
    {% elif 'PETG' in params %} ; = PETG =
      M104 S190                 ; nozzle to 190C
      M140 S80                  ; bed to 80C
    {% else %}                  ; = ABS =
      M104 S210                 ; nozzle to 210C
      M140 S100                 ; bed to 100C
    {% endif %}
    G32                         ; Home All and QGL
    M106 S77                    ; Part fan to 30%
    G0 X125 Y125 Z30 F7200      ; Move to centre of bed


# pull plastic in
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E15 F300                    ; quickly load filament to heatbreak
   G1 E70 F150                    ; slower extrusion for hotend path
   M82                            ; set extruder to absolute


# spit plastic back out
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-120 F1200                  ; retract filament completely
   M82                            ; set extruder to absolute


[gcode_macro set_pa]
variable_pa_stock: 0.05
gcode:
  SET_GCODE_VARIABLE MACRO=set_pa VARIABLE=pa_stock VALUE={printer.extruder.pressure_advance}
  SET_PRESSURE_ADVANCE ADVANCE={params.VALUE}


[gcode_macro restore_pa]
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={printer["gcode_macro set_pa"].pa_stock}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  PRINT_END
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_E: 1.7
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91


[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1.7
gcode:
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

