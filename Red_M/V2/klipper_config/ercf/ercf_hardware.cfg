## Enraged Rabbit : Carrot Feeder config file for ERCF EASY BRD v1.1

# This file contains common pin mappings for the Seeeduino XIAO.
# To use this config, the firmware should be compiled for the
# SAMD21G18 with "Internal clock" and a "8KiB bootloader".

# This config sample assume you set the two J6 jumpers on 1-2 and 4-5, i.e. [..].[..]

[mcu ercf]
serial: /dev/serial/by-id/usb-Klipper_samd21g18a_2467AAFF5851555020312E373C1105FF-if00

[tmc2209 manual_stepper gear_stepper]
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt those values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
uart_pin: ercf:PA8
uart_address: 0
interpolate: false
# run_current: 0.4
run_current: 1.2
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 0

# Carrot Feeder 5mm D-cut shaft
[manual_stepper gear_stepper]
step_pin: ercf:PA4
dir_pin: ercf:PA10
enable_pin: !ercf:PA2
# rotation_distance: 22.6789511	# Bondtech 5mm Drive Gears
rotation_distance: 22.280935508195	# Bondtech 5mm Drive Gears
gear_ratio: 80:20
microsteps: 8                  # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 35
accel: 800
# Right now no pin is used for the endstop, but we need to define one for klipper. So just use a random, not used pin
endstop_pin: ^ercf:PA1          # unused pin on the Seeeduino XIAO

# Carrot Feeder selector
[manual_stepper selector_stepper]
step_pin: ercf:PA9
dir_pin: ercf:PB8
enable_pin: !ercf:PA11
rotation_distance: 40
microsteps: 16                  # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 200
accel: 600
endstop_pin: ^!ercf:PB9
#endstop_pin: tmc2209_selector_stepper:virtual_endstop

[tmc2209 manual_stepper selector_stepper]
uart_pin: ercf:PA8
uart_address: 1
run_current: 0.55
hold_current: 0.1
interpolate: false
sense_resistor: 0.110
stealthchop_threshold: 5000
# Uncomment the lines below if you want to use sensorless homing for the selector
#diag_pin: ^ercf:PA7            # Set to MCU pin connected to TMC DIAG pin - move the jumper to position 2-3
#driver_SGTHRS: 75              # 255 is most sensitive value, 0 is least sensitive


# Values are for the MG90S servo
[ercf_servo ercf_servo]
pin: ercf:PA5
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215

# [duplicate_pin_override]
# pins: ercf:PA6
# Put there the pin used by the encoder and the filament_motion_sensor
# It has to be the same pin for those 3

[ercf_encoder ercf_encoder]
encoder_pin: ^ercf:PA6			# EASY-BRD: ^ercf:PA6, Flytech ERB: ^ercf:gpio22
encoder_resolution: 1.352539	# Set AFTER 'rotation_distance' is tuned for gear stepper (see manual)
extruder: extruder		# The extruder to track with for runout/clog detection

# These are advanced but settings for Automatic clog detection mode. Make sure you understand or ask questions on Discord
desired_headroom: 5.0		# The runout headroom that ERCF will attempt to maintain (closest ERCF comes to triggering runout)
average_samples: 4		# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly

# [filament_switch_sensor toolhead_sensor]
# pause_on_runout: False
# filament sensor wired to the ezbrd MCU
# switch_pin: ^ercf:PA7
# filament sensor wired to EBB42 toolhead
# switch_pin: ^EBBCan:PB3

[include tmc_autotune.cfg]
