
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10
##===================================================================

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_07300119C19869AFF9D9425EC72000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_13C0FF17C19869AFFAD3425EC72000F5-if00
##--------------------------------------------------------------------

[mcu rpi]
# https://github.com/Klipper3d/klipper/blob/master/config/sample-raspberry-pi.cfg
# The rpi microcontroller is used as secondary.
# Typically, both the X and Y axes
# are connected to the main micro-controller. The rpi microcontroller is used
# on non time-critical functions such as enclosure sensors, additional fan or
# light sources
serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.29
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.10
# interpolate: true
run_current: 0.8
# hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.28
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.9
# interpolate: true
run_current: 0.8
# hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.715
# position_endstop: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
# interpolate: true
run_current: 1.0
# hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
# interpolate: true
run_current: 1.0
# hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
# interpolate: true
run_current: 1.0
# hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.4
# interpolate: true
run_current: 1.0
# hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0
interpolate: false


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 128
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
control = pid
pid_kp = 34.349
pid_ki = 2.489
pid_kd = 118.505
##	Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.5
# hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:P0.25
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 36.878
pid_ki: 1.329
pid_kd: 255.839

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, change pin to !^z:P0.10
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 6

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[heater_fan exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
pin: z:P2.7
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
#pin: P2.5
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:233.5,346
speed:100
z_hop:10

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
fade_start: 0.2
fade_end: 10.0
algorithm: bicubic
bicubic_tension: 0.05
probe_count: 7,7
relative_reference_index: 24
split_delta_z: 0.01
mesh_pps: 0

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
gantry_corners:
	-60,-10
	410,420
points:
	50,25
	50,275
	300,275
	300,25
speed: 100
horizontal_move_z: 20
retries: 20
retry_tolerance: 0.0075
max_adjust: 20

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63

[neopixel mini12864_display]
#	To control Neopixel RGB in mini12864 display
pin: z:P1.21
chain_count: 3
initial_RED: 0.8
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel.
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_DISPLAY_COLOUR
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------


#####################################################################
# 	Retraction
#####################################################################

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 80
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 32
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#--------------------------------------------------------------------


#####################################################################
# 	Input Shaper
#####################################################################

[input_shaper]
shaper_freq_x: 50.4
#   A frequency (in Hz) of the input shaper for X axis. This is
#   usually a resonance frequency of X axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for X axis.
shaper_freq_y: 37.4
#   A frequency (in Hz) of the input shaper for Y axis. This is
#   usually a resonance frequency of Y axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei. The default
#   is mzv input shaper.
shaper_type_x: mzv
shaper_type_y: mzv
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Default value is 0.1 which is a
#   good all-round value for most printers. In most circumstances this
#   parameter requires no tuning and should not be changed.

#--------------------------------------------------------------------


#####################################################################
# 	Accelerometer # https://www.klipper3d.org/Measuring_Resonances.html
#####################################################################

[adxl345]
cs_pin: rpi:None
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
# axes_map: x,z,-y
#   The accelerometer axis for each of the printer's x, y, and z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y,x,z" to swap the x and y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,5

#--------------------------------------------------------------------


#####################################################################
# 	Arcs
#####################################################################

[gcode_arcs]
resolution: 0.3
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

#--------------------------------------------------------------------


#####################################################################
# 	Stable Z home # https://github.com/matthewlloyd/Klipper-Stable-Z-Home
#####################################################################

[stable_z_home]
gcode:
#  The G-code to run before each probe attempt. The default is none.
#retries:
#  The maximum number of probe attempts allowed. The default is 20.
#window:
#  The number of samples to use in the tolerance window. The default is 4.
#retry_tolerance:
#  The maximum range between the min and max values of the Z offset in the window
#  to consider the offset stable and complete the procedure. The default is
#  0.0025mm.

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro Z_HOME]
gcode:
    # G28 Z
    STABLE_Z_HOME

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SMARTHOME
    clean_nozzle
    Z_HOME
    QUAD_GANTRY_LEVEL
    # 350mm
    G0 X175 Y175 Z30 F3600

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28
    G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    BED_MESH_CAL
    clean_nozzle
    G1 Z20 F3000                   ; move nozzle away from bed
    BEDMIDDLE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ;MESH:ENDGCODE wait for buffer to clear
    G92 E0                         ; zero the extruder
    # G1 E-10.0 F3600                ; retract filament
    G10                            ; retract filament
    G91                            ; relative positioning
    G0 Z10.00 X20.0 Y20.0 F20000   ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR




[gcode_macro SMARTHOME]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

[gcode_macro SMARTQGL]
gcode:
    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            QUAD_GANTRY_LEVEL
        {% endif %}
    {% endif %}

[gcode_macro SET_DISPLAY_COLOUR]
gcode:
    SET_LED LED=mini12864_display RED=0.9 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=mini12864_display RED=0.9 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=mini12864_display RED=0.9 GREEN=0 BLUE=0 INDEX=3

[gcode_macro OFF_DISPLAY]
gcode:
    SET_LED LED=mini12864_display RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=mini12864_display RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=mini12864_display RED=0 GREEN=0 BLUE=0 INDEX=3

[gcode_macro BEDMIDDLE]
gcode:
    G1 X175 Y175 F10000

[gcode_macro BED_PROBE_ACCURACY]
gcode:
    SMARTHOME
    SMARTQGL
    G1 X175 Y175 F10000
    BED_MESH_CLEAR
    PROBE_ACCURACY

[gcode_macro QGL_PROBE_ACCURACY]
gcode:
    SMARTHOME
	G0 X50 Y25 Z30 F3600
    PROBE_ACCURACY
	G0 X50 Y275 Z30
    PROBE_ACCURACY
	G0 X300 Y275 Z30 F3600
    PROBE_ACCURACY
	G0 X300 Y25 Z30 F3600
    PROBE_ACCURACY

[gcode_macro BED_MESH_CAL]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE PROFILE=DEFAULT
    BED_MESH_PROFILE SAVE=DEFAULT
    BED_MESH_PROFILE LOAD=DEFAULT

[gcode_macro Z_ESTOP_CAL]
gcode:
    G28
    Z_HOME
    QUAD_GANTRY_LEVEL
    Z_HOME
    QUAD_GANTRY_LEVEL
    G1 X175 Y175 F10000
    BED_MESH_CLEAR
    Z_ENDSTOP_CALIBRATE

[gcode_macro QGL_BED_MESH]
gcode:
    BED_MESH_CLEAR
    SMARTHOME
    QUAD_GANTRY_LEVEL
    BED_MESH_CAL

# Convert Marlin linear advance commands to SET_PRESSURE_ADVANCE.
# Used in conjunction with Marlin's linear advance calibration tool: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set k = params.K|default(0)|float %}
	SET_PRESSURE_ADVANCE ADVANCE={k}

[include /home/pi/klipper_config/nozzle_scrub.cfg]
