[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QGL
gcode:
    BED_MESH_CLEAR
    SET_VELOCITY_LIMIT ACCEL=10000 ACCEL_TO_DECEL=10000
    SET_FAN_SPEED FAN=Octopus_Drivers SPEED=0.6
    HomeMe
    G28 Z
    check_if_attached _SHOULD_ATTACH=True
    BASE_QGL
    G28 Z
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

[gcode_macro HomeMe]
gcode:
    {% if not 'z' in printer.toolhead.homed_axes %}
        G28
        check_if_attached
    {% endif %}
    
[gcode_macro Center]
gcode:
    {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
    HomeMe
    check_if_attached
    G0 x{x_center} Y{y_center} Z2 f9000

[gcode_macro check_if_attached]

gcode:
	{% set _should_attach = params._SHOULD_ATTACH|default('False') %}
    #{% set should_attach = printer["gcode_macro check_if_attached"].shouldattach %}
    ## probe open  need to check before center. need to have two macros.
    ## check probe before z movement
    ##and check probe to save docking it twice and try pick it up again if it fails
    _CheckProbe action=query
    {% if ( 'True' in _should_attach ) %} #True
        {% if printer.probe.last_query == False %} #if attached ;True = triggered
            { action_respond_info("true already attached") }
            #{ action_respond_info("PICKING UP PROBE") }
            ATTACH_PROBE_LOCK
        {% elif printer.probe.last_query == True %} #if not attached and it should be. pick it up.
            { action_respond_info("true should be docked.") }
            { action_respond_info("PICKING UP PROBE") }
            DOCK_PROBE_UNLOCK
            DOCK_PROBE
            ATTACH_PROBE_LOCK
        {% endif %}
    {% elif ( 'False' in _should_attach ) %} #False
        {% if printer.probe.last_query == False %} #if attached ;false = open
            #{ action_respond_info("false should be open/attached") }
            { action_respond_info("send help dock probe first") }
            DOCK_PROBE_UNLOCK
            DOCK_PROBE
        {% elif printer.probe.last_query == True %} #if not attached and it should be. pick it up.
            #{ action_respond_info("false already attached") }
            { action_respond_info("dropping probe off") }
            DOCK_PROBE_UNLOCK
            DOCK_PROBE
        {% endif %}
    {% endif %}
