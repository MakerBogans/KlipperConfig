[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QGL
gcode:
    {% set zmove = printer['configfile'].config["quad_gantry_level"]["horizontal_move_z"]|int %}
    BED_MESH_CLEAR
    SET_VELOCITY_LIMIT ACCEL=10000 ACCEL_TO_DECEL=10000
    SET_FAN_SPEED FAN=Octopus_Drivers SPEED=0.6
    HomeMe
    G28 Z
    check_if_attached _SHOULD_ATTACH=True##if already attached
    G0 X50 Y25 Z{zmove} F20000
    #move to QGL starting pos
    check_if_attached _SHOULD_ATTACH=True#running again if it fails to pick up
    BASE_QGL
    G28 Z
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

[gcode_macro HomeMe]
gcode:
    {% if not 'z' in printer.toolhead.homed_axes %}
        G28
        check_if_attached
    {% endif %}
    
[gcode_macro Center]
gcode:
    #{% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    #{% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
    HomeMe
    check_if_attached
    check_if_attached
    G90
    #G0 x150 Y150 Z2 f9000
    G0 x{x_center} Y{y_center} Z6 f9000


[gcode_macro _check_attached_vars]
variable_still_attached_err:    False
variable_attach_attempts:       0
gcode:
    #{ action_respond_info("amount of attempts: %s" % attach_attempts ) }
    _serialMessages MSG='amount of attempts: {attach_attempts}'
 
[gcode_macro check_if_attached]
#variable_shouldattach:               False # should probe be attached
variable_attach_attempts_loop: 10
variable_att_loop_number: 0
gcode:
	{% set _should_attach = params._SHOULD_ATTACH|default('False') %}
    {% set attach_attempts_counter = printer["gcode_macro _check_attached_vars"].attach_attempts|int %}



    #{% set should_attach = printer["gcode_macro check_if_attached"].shouldattach %}
    ## probe open  need to check before center. need to have two macros.
    ## check probe before z movement
    ##and check probe to save docking it twice and try pick it up again if it fails
    _CheckProbe action=query
    {% if ( 'True' in _should_attach ) %} #True
        {% if printer.probe.last_query == False %} #if attached ;True = triggered
            _serialMessages MSG='true already attached'
            ATTACH_PROBE_LOCK
        {% elif printer.probe.last_query == True %} #if not attached and it should be. pick it up.
            _serialMessages MSG='PICKING UP PROBE'
            _serialMessages MSG='true should be docked.'
            DOCK_PROBE_UNLOCK #failsafe ?
            DOCK_PROBE        #failsafe ?
            ATTACH_PROBE_LOCK
        {% endif %}
    {% elif ( 'False' in _should_attach ) %} #False
        {% if printer.probe.last_query == False %} #if attached ;false = open
            _serialMessages MSG='send help dock probe first'
            DOCK_PROBE
            DOCK_PROBE_UNLOCK
            DOCK_PROBE
        {% elif printer.probe.last_query == True %} #probe not attached and i don't want it attached so do what??
            _serialMessages MSG='probe not attached doing nothing'
            #DOCK_PROBE_UNLOCK
            #DOCK_PROBE
        {% endif %}
    {% endif %}




[gcode_macro tighten_belts]
gcode:
    # Airprint a box for belt adjustment. 
    # First belts should be loose, almost dropping off. 

    # Home first then drop the bed 25 mm. You should do this manually, but uncomment to do automatically.
    #G28
    G1 Z25

    # Run the below code and the belts will vibrate like a guitar string.
    # Tighten a little bit and repeat until the belts get to a point where they don’t vibrate.
    # At that point, you’re done.
    G1 X10 Y10 F6000 # front left corner
    G1 X10 Y250 F6000 # back left corner
    G1 X250 Y250 F6000 # back right corner
    G1 X250 Y10 F6000 # front right corner
    G1 X10 Y250 F6000 # back left corner

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
variable_parameter_PRINT_MIN : 0,0
variable_parameter_PRINT_MAX : 0,0
gcode:
    # Parameters
    G90 ; absolute position mode
    G92 E0 ; Reset Extruder
    {% set bedtemp = params.BED|default(112)|int %}
    {% set hotendtemp = params.HOTEND|default(260)|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    {% set skirts = params.SKIRTS|default(0)|int %}
    {% set brim = params.BRIM|default(0)|int %}
    {% set material = params.MATERIAL|default(ABS)|string %}
    {% set layerheight = params.LAYER_HEIGHT|default(0.1)|float %}
    {% set accel = params.MAIN_ACCEL|default(10000)|int %}


    SET_FAN_SPEED FAN=Octopus_Drivers SPEED=1
    SET_FAN_SPEED FAN=Skirt_Fan1 SPEED=1
    SET_FAN_SPEED FAN=Skirt_Fan2 SPEED=0.80
    M83 ; use relative distances for extrusion
    M104 S{hotendtemp /2 }               ;start heating hotend WITHOUT WAIT
    M140 S{bedtemp}         ;start heating bed WITHOUT WAIT
    G4 P2000                ;milliseconds

    _check_bed_surface BED={bedtemp} MATERIAL={material} ACTIONS_BEFORE_NOZZLE=1
    scrubadubdub
    M104 S0                 ;turn off nozzle if noise is bad.
    movetobrush

    ##if surface temp is less than 100 
    _set_printing_values LAYER_HEIGHT={layerheight} MAIN_ACCEL={accel}
    _check_bed_surface BED={bedtemp} MATERIAL={material} ACTIONS_BEFORE_NOZZLE=0
    M140 S{bedtemp}         ;set bed temp back to normal
    G4 P2000                ;milliseconds
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
    #calibrate_z

    #movetobrush
    G0 X280 Y300 Z5 F8000
    #need to move to a point to stop oozing when heating up

    _serialMessages MSG='final heating before starting print!'
    M190 S{bedtemp}         ;start heating bed and WAIT
    M109 S{hotendtemp}      ;start heating hotend and WAIT
    movetobrush # to wipe any ooze off
    
    {% if skirts > 1 %}
        _serialMessages MSG='skirt enabled, no purge'
    {% elif brim > 1 %}
        _serialMessages MSG='brim enabled, no purge'
    {% else %}
        PURGELINE
    {% endif %}
    G92 E0
    _serialMessages MSG='LETS GO!!'

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.5 F1400                 ; retract filament i could tune this to give the filament a nice point tip lol...
    G91                            ; relative positioning
    G0 Z2 F3200                    ; go up a little
    G90                            ; Absolute positioning
    G0 X280 Y280 F24000            ; stringing bad move away from part

    #M140 S85 ;lower bed temp 
    scrubadubdub WANT_COLD=True
    G28 Z
    
    ;M84 X Y E ;Disable all steppers but Z
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    SET_FAN_SPEED FAN=Octopus_Drivers SPEED=0.8
    _serialMessages MSG='Print Finished!!'
    ;M141 S0; Turn-off chamber

[gcode_macro _set_printing_values]
gcode:
    {% set layerheight = params.LAYER_HEIGHT|float %}
    {% set accel = params.MAIN_ACCEL|int %}

    #SET_GCODE_OFFSET Z=0.0 #reset the offset before starting each print.
    {% if layerheight == 0.1 %}
        {% if accel == 8000 %}
            _serialMessages MSG='setting values for: {layerheight} {accel}'
            SET_PRESSURE_ADVANCE ADVANCE=0.024 ## accel 8000
            # SET_GCODE_OFFSET Z_ADJUST=-0.005 MOVE=1
        {% elif accel >= 20000 %}
            _serialMessages MSG='setting values for: LayerHeight{layerheight},Accel: {accel}'
            SET_PRESSURE_ADVANCE ADVANCE=0.024 ## accel 8000
        {% endif %}
    {% elif layerheight == 0.2 %}
        {% if accel == 8000 %}
            _serialMessages MSG='setting values for: {layerheight} {accel}'
            SET_PRESSURE_ADVANCE ADVANCE=0.034 ## accel 8000
            # SET_GCODE_OFFSET Z_ADJUST=-0.005 MOVE=1
        {% elif accel >= 20000 %}
            _serialMessages MSG='setting values for: LayerHeight{layerheight},Accel: {accel}'
            SET_PRESSURE_ADVANCE ADVANCE=0.024 ## accel 8000
        {% endif %}
    {% else %}
        _serialMessages MSG='error setting PA or accel values'
    
    {% endif %}

[gcode_macro _check_bed_surface] ## i think i have to have this here because of they way klipper works...
gcode:
    {% set bedtemp = params.BED|default(112)|int %}
    {% set bedsurface = printer['temperature_sensor Bed_Surface'].temperature|float %}
    {% set material = params.MATERIAL|default(ABS)|string %}
    {% set actions_before_nozzle = params.ACTIONS_BEFORE_NOZZLE|default(1)|int %} #is the default thing messing with me?

    ##      with bed base at 112 surface seems to stabilize at around 103.8 - 104c        
    _serialMessages MSG='starting with bed is: {bedtemp} bed surface is: {bedsurface}'

    {% if printer['temperature_sensor Bed_Surface'].temperature >= 105.5 %} ##greater than
        _serialMessages MSG='waiting for bed surface to cool down'
        {% if actions_before_nozzle == 1 %}#before nozzle scrub
            M140 S{bedtemp - 4 } #nowait
            _serialMessages MSG='before scubadubdub too hot cooling down'
        {% elif actions_before_nozzle == 0 %}
            M190 S{bedtemp - 4 }         
            TEMPERATURE_WAIT SENSOR='temperature_sensor Bed_Surface' MINIMUM={bedtemp-9} MAXIMUM={bedtemp-6}
            M190 S{bedtemp}
        {% else %}
            #_serialMessages MSG='error with cooling bed down.'
            _serialMessages MSG='error with cooling bed. bed is: {bedtemp} bed surface is: {bedsurface}'            
        {% endif %}
    {% elif printer['temperature_sensor Bed_Surface'].temperature <= 102 %} ##less than
        {% if actions_before_nozzle == 1 %} #before nozzle scrub
            #_serialMessages MSG='inside number1'
            {% if material == 'ABS' %}
                _serialMessages MSG='before clean preheating bed to: {bedtemp+3}'
                M140 S{bedtemp +3 } #nowait
            {% elif material == 'PLA' %}
                M140 S{bedtemp +8} #nowait
                _serialMessages MSG='before clean preheating bed to: {bedtemp+8}'
            {% else %}
                M140 S{bedtemp +2} #nowait
                _serialMessages MSG='error with beforenozzle marco1'
            {% endif %}
            ########################################################
        {% elif actions_before_nozzle == 0 %}
            #_serialMessages MSG='inside number0'
            {% if material == 'ABS' %}
                _serialMessages MSG='after clean preheating bed to: {bedtemp+3}'
                _serialMessages MSG='before scubadubdub bed not hot enough'
                M190 S{bedtemp +3 }   ;start heating bed and WAIT bumping up by 2 might help surfac get to temp a bit better.
                TEMPERATURE_WAIT SENSOR='temperature_sensor Bed_Surface' MINIMUM={bedtemp-9} MAXIMUM={bedtemp-6}
            {% elif material == 'PLA' %}
                _serialMessages MSG='after clean preheating bed to: {bedtemp+8}'
                M190 S{bedtemp +8}
                #_serialMessages MSG='waiting for bed surface to heat up to: {bedtemp}'
                TEMPERATURE_WAIT SENSOR='temperature_sensor Bed_Surface' MINIMUM={bedtemp-1} MAXIMUM={bedtemp+2}
            {% else %}
                _serialMessages MSG='error with beforenozzle marco2'
                M190 S{bedtemp +2}
            {% endif %}
        {% endif %}

    {% else %}
        _serialMessages MSG='error with heating bed. bed is: {bedtemp} bed surface is: {bedsurface}'            
    {% endif %}

[gcode_macro M48] #current pos
gcode:
    PROBE_ACCURACY

[gcode_macro purgeline]
gcode:
    check_if_attached
    HomeMe

   {% if printer.extruder.target <= printer.configfile.settings.extruder.min_extrude_temp %}
      M109 S{printer.configfile.settings.extruder.min_extrude_temp +60}
   {% endif %}

    check_if_attached
    movetobrush
    G1 Z2.0 F2400 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10 Y20 F5000 ; Move to start position before lowering Z
    G1 X10 Y20 Z0.35 F5000 ; Move to start position
    G1 X10 Y100.0 Z0.35 F1500 E10 ; Draw the first line
    G1 X11 Y100.0 Z0.35 F5000 ; Move to side a little
    G1 X11 Y20 Z0.35 F1500 E10 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z5 F2400
    G90                                     ; Absolute positioning
    G1 E-0.2 F1500                         ; retract filament
    G92 E0 ; Reset Extruder

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro _serialMessages]
gcode:
    {% set message = params.MSG|string %}
    { action_respond_info(message) }

##  examples below.
##
    #_serialMessages MSG='true already attached'
    #{% set settle_temp = 160|int %}
    #_serialMessages MSG='setting values for: {layerheight}'
    #_serialMessages MSG='starting with bed is: {bedtemp} bed surface is: {bedsurface}'


    #https://github.com/zellneralex/klipper_config/blob/master/homing.cfg