[gcode_macro movetobrush]
gcode:
   check_if_attached
    #{% set P = printer["gcode_macro _Probe_Variables"].probe_attached %}
   {% set x_center = (printer["gcode_macro scrubadubdub"].brush_start_x|float + printer["gcode_macro scrubadubdub"].brush_end_x|float ) / 2 %}
   {% set y_center = (printer["gcode_macro scrubadubdub"].brush_start_y|float + printer["gcode_macro scrubadubdub"].brush_end_y|float ) / 2 %}
   HomeMe
       #{% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
   G1 Z5 F{printer["gcode_macro scrubadubdub"].speed}  #need the thing to include other macro variables forgot what it is...
   G1 X{x_center} Y{y_center} F{printer["gcode_macro scrubadubdub"].speed} ## Move to brush center position
   G1 Z{printer["gcode_macro scrubadubdub"].brush_height_z} F{printer["gcode_macro scrubadubdub"].speed}      ## Move nozzle down into brush.

#[gcode_macro _get_temp] ##used to keep scrubbing till temp drops to x
#gcode:
   #if current temp greater than equal to cleaning temp
#   {% if printer.extruder.temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
#   M105
#   {% endif %}


[gcode_macro _lowertemp]
variable_settle_temp:       160
gcode:
   #{ action_respond_info("dropping temp down by: % tmp_temp % " (tmp_temp|float) ) }
   { action_respond_info("dropping temp") }

   #if current temp greater than
   {% if printer.extruder.temperature > 50 %}
      #M109 S{printer.extruder.temperature - lowertemp}
      M106 S255 # this might help lower temp faster
      M109 S{settle_temp}
      M106 S0 # turn off part fan after 
   {% endif %}


[gcode_macro scrubadubdub]
variable_wipe_qty:           10
variable_speed:            18000

##                               brush positions are based on nozzle pos
##                               move nozzle to where you want start/end movements to be
variable_brush_start_x:     230
variable_brush_end_x:       280
variable_brush_start_y:     299	
variable_brush_end_y:       303
variable_brush_height_z:    1.50 #seems to be perfect
variable_brush_lower_z:     0.90 #prev 1.20
variable_cleaning_temp:     220  # oozzeee?
variable_wait_time:         2000 #milliseconds
variable_want_cold:         "False"

gcode:
   {% set x_center = (brush_start_x|float + brush_end_x|float ) / 2 %}
   {% set y_center = (brush_start_y|float + brush_end_y|float ) / 2 %}

	{% set want_cold = params.WANT_COLD|default("False") %}
	SET_GCODE_VARIABLE MACRO=scrubadubdub VARIABLE=want_cold VALUE={ want_cold }

################################################################################################################################

   #if current target greater than equal to cleaning temp
   {% if printer.extruder.temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      {% if want_cold == "False" %} #False
         { action_respond_info("already above cleaning temp.") }
         M104 S{cleaning_temp}
         G4 P{wait_time}
      {% endif %}
      #M109 S{printer.extruder.temperature - 40} #lower current temp by 40c
   #if current target is less than equal to min extrude temp
   {% elif printer.extruder.temperature <= printer.configfile.settings.extruder.min_extrude_temp %}
      {% if want_cold == "False" %} #False
         { action_respond_info("not hot enough, heating up") }
         G28 Z
         M109 S{cleaning_temp}
      {% endif %}
   {% endif %}

   G4 P{wait_time / 2}

   HomeMe
   G90 #safeguard
   check_if_attached
   G92 E0 # reset etruder
   #{action_respond_info("Extruder Temp: %.1f" % (printer.extruder.temperature))}

   #{% if "xyz" in printer.toolhead.homed_axes %}

      G1 Z10 F{speed}
      {% if want_cold == "False" %} #False
         G1 E3.0 F3000 #do a squirt
         G1 E-3.5 F2400
         G92 E0 # Reset Extruder
         G4 P{wait_time / 2}
      {% endif %}
      G1 X{x_center} Y{y_center} F{speed} ## Move to brush center position
      G1 Z{brush_height_z} F{speed}       ## Move nozzle down into brush.
   
      # scrub a dub dub
      {% for wipes in range(1, (wipe_qty + 1)) %}

         M105
         G1 X{brush_start_x} Y{brush_start_y } Z{brush_height_z - brush_lower_z} F{speed}
         G1 X{brush_end_x} Y{brush_start_y } F{speed}

         G1 X{brush_start_x} Y{y_center } Z{brush_height_z + brush_lower_z} F{speed}
         G1 X{brush_end_x} Y{y_center } F{speed}

         G1 X{brush_start_x} Y{brush_end_y } Z{brush_height_z - brush_lower_z} F{speed}
         G1 X{brush_end_x} Y{brush_end_y } F{speed}

         G1 X{brush_start_x} Y{y_center } Z{brush_height_z + brush_lower_z} F{speed}
         G1 X{brush_end_x} Y{y_center } F{speed}
         
         #{action_respond_info("Extruder Temp: %.1f" % (printer.extruder.temperature))}
         {% if wipes == wipe_qty/2 %} ## if wipe no. at half way
            #M109 S{printer.extruder.temperature - 20} #lower current temp by 20c and wait
            M105
            #{ action_respond_info("%want_cold") }
            {% if want_cold == "False" %} #False
               #if current temp greater than 
               #{% if printer.extruder.temperature > settle_temp %}
                  _lowertemp
                  ##could prob use "setg_code variable to lower the settle temp by 10 and keep going?
                  #wipe_qty = wipe_qty + 2 #doesn't work :(
                  #M118 
               #{% endif %}
            {% endif %}
            M104 S0 #turn off hotend to help stop oozing
            G0 Z{brush_height_z - brush_lower_z} F{speed}
            #G4 P{wait_time / 2}
         {% endif %}
         {% if wipes == 2 %}
            M104 S0
         {% endif %}

         {% if wipes == wipe_qty -2 %} #if near end home z and continue.
            G28 Z
            #G1 Z{brush_height_z + 3} F{speed} ## not sure why i have this here ???
         {% endif %}
      {% endfor %}

      M400
      G28 Z
      G1 Z{brush_height_z} F{speed} ## not sure why i have this here ???
      #{ action_respond_info("Finished") }
   #{% endif %}

##forloop while waiting for nozzle temp to reach x ?
