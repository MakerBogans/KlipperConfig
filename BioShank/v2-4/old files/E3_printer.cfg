[board_pins mks_sgen_l_v2]
aliases:
    I2C_SDA = P0.0,
    I2C_SCL = P0.1,
    TX0 = P0.2,
    RX0 = P0.3,
    TMC_SCLK = P0.4,
    TMC_MISO = P0.5,
    SD_CS1 = P0.6,
    SD_SCK = P0.7,
    SD_MISO = P0.8,
    SD_MOSI = P0.9,
    E1_EN = P0.10,
    E0_DIR = P0.11,
    LCD_D4 = P0.15,
    LCD_RS = P0.16,
    LCD_D5 = P0.17,
    LCD_EN = P0.18,
    Y_STEP = P0.19,
    Y_DIR = P0.20,
    Z_EN = P0.21,

    Z_STEP = P0.22,
    TH1 = P0.23,
    TH2 = P0.24,
    TH3 = P0.25,
    TH4 = P0.26,
    SD_DET = P0.27,
    SD_CS2 = P0.28,
    USB_D+ = P0.29,
    USB_D- = P0.30,
    #################################################
    LCD_D6 = P1.0,
    UART_X = P1.1,
    FAN2 = P1.4,
    UART_Y = P1.8,
    E1_STEP = P1.9,
    UART_Z = P1.10,
    E1_DIR = P1.14,
    UART_E0 = P1.15,
    TMC_MOSI = P1.16,
    UART_E1 = P1.17,
    LED1 = P1.18,
    LED2 = P1.19,
    LED3 = P1.20,
    LED4 = P1.21,
    LCD_D7 = P1.22,
    SERVO_01 = P1.23,
    Z_MAX = P1.24,
    Z_MIN = P1.25,
    Y_MAX = P1.26,
    Y_MIN = P1.27,
    X_MAX = P1.28,
    X_MIN = P1.29,
    BIN_ENC = P1.30,
    BEEPER = P1.31,
    ####################################################
    SERVO_00 = P2.0,
    X_EN = P2.1,
    X_STEP = P2.2,
    X_DIR = P2.3,
    PWM_FAN1 = P2.4, #MOSFET/PWM PINS
    HB_HEATER = P2.5, #MOSFET/PWM PINS
    ENCLOSURE_HEATER = P2.6, #MOSFET/PWM PINS
    E0_HEATER = P2.7, #MOSFET/PWM PINS
    Y_EN = P2.8,
    #RES = P2.9 #MOSFET/PWM PINS
    ISP_BOOT = P2.10,
    Z_DIR = P2.11,
    E0_EN = P2.12,
    E0_STEP = P2.13,
    BTN_EN1 = P3.25,
    BTN_EN2 = P3.26,
    TX3 = P4.28,
    RX3 = P4.29,



[printer]
kinematics: cartesian
max_velocity: 30000 #20000
max_accel: 14000 # too much for x, not now hahahaha
max_z_velocity: 45
max_z_accel: 500
square_corner_velocity: 5.0




# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper _z] section
## Pro be points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Pro be pin								[pr obe] section
## Fine tune E steps					[extruder] section

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#restart_method: command
##--------------------------------------------------------------------

serial:/dev/serial/by-id/usb-Klipper_lpc1769_0D80000EA29869AFD0E63F5EC72000F5-if00

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: X_STEP
dir_pin: X_DIR
enable_pin: !X_EN
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: X_MIN
position_endstop: -10
position_min: -10
position_max: 263 #263
homing_speed: 200   #Max 100 ##come back to this
second_homing_speed: 20
homing_retract_dist: 5 ##come back to this
##--------------------------------------------------------------------

##--------------------------------------------------------------------

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: UART_X
#interpolate: True
run_current: 1.2
hold_current: 0.5
sense_resistor: 0.110 #not sure what this is ##come back to this
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: Y_STEP
dir_pin: Y_DIR
enable_pin: !Y_EN
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: Y_MIN
position_endstop: -20
position_min: -20
position_max: 220 #220
homing_speed: 200  #Max 100 ##come back to this
second_homing_speed: 20
homing_retract_dist: 5 ##come back to this
##--------------------------------------------------------------------
##--------------------------------------------------------------------


#homing_positive_dir: true ##come back to this

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: UART_Y
#interpolate: True
run_current: 1.2
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: Z_STEP
dir_pin: Z_DIR
enable_pin: !Z_EN
rotation_distance: 8
full_steps_per_rotation:400
microsteps: 8
endstop_pin: ^!X_MAX
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.465 #0.420
position_min: -1.3 #0.450 
position_max: 200
homing_positive_dir: false
homing_speed: 6
second_homing_speed: 4
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: UART_Z
#interpolate: true
run_current: 1.1
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 200

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: E1_STEP
dir_pin: E1_DIR
enable_pin: !E1_EN
rotation_distance: 8
full_steps_per_rotation:400
microsteps: 8


[tmc2209 stepper_z1]
uart_pin: UART_E1
#interpolate: true
run_current: 1.1
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 200



#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: E0_STEP
dir_pin: !E0_DIR
enable_pin: !E0_EN
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 23.46041055718
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
max_extrude_only_distance: 110.0
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_cross_section:7.00
heater_pin: E0_HEATER
##	Validate the following thermistor type to make sure it is correct
sensor_type: EPCOS 100K B57560G104F
sensor_pin: TH1
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control = pid
pid_kp = 20.741
pid_ki = 0.981
pid_kd = 109.667
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.0875
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: UART_E0
#interpolate: false
run_current: 1.2
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: HB_HEATER
sensor_type: EPCOS 100K B57560G104F
sensor_pin: TH2
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1
min_temp: 0
max_temp: 115
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769


[heater_generic heater_chamber]
heater_pin: ENCLOSURE_HEATER #HE1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: TH3 #TH3 It's called TH2 ON THE BOARD
control: watermark
max_power: 1
min_temp: 0
max_temp: 60

[verify_heater heater_chamber]
max_error: 80
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 9000
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.
#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
pin: ^!Z_MIN
x_offset: -62
y_offset: 7
z_offset: 1.270
speed: 15.0
lift_speed: 30.0
samples: 3
samples_result: average
sample_retract_dist: 2.0
samples_tolerance: 0.050 #0.010
samples_tolerance_retries: 8

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PWM_FAN1
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: FAN2
max_power: 1.0
fan_speed: 0.8
kick_start_time: 0.5
heater: extruder
heater_temp: 60.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0


#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:TURN_OFF_HEATERS
timeout: 7200

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:105,130
speed:350
z_hop:3

[z_tilt]
z_positions:
    30,180
    307,180
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper _z, the second to stepper _z1,
#   the third to stepper_ z2, etc. This parameter must be provided.
points:
    70,130
    262,130
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 350
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 4
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 20
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.008
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.
#--------------------------------------------------------------------

#--------------------------------------------------------------------

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.31, EXP1_3=P0.18, EXP1_5=P0.15, EXP1_7=P1.0,  EXP1_9=<GND>,
    EXP1_2=P1.30, EXP1_4=P0.16, EXP1_6=P0.17, EXP1_8=P1.22, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=P0.8, EXP2_3=P3.25, EXP2_5=P3.26, EXP2_7=P0.27, EXP2_9=<GND>,
    EXP2_2=P0.7, EXP2_4=P0.28, EXP2_6=P0.9,  EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
menu_timeout: 40
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: BEEPER

#--------------------------------------------------------------------

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel.
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------
[bed_mesh]
speed: 550
horizontal_move_z: 3
mesh_min: 15,25
mesh_max: 200, 200
fade_start: 1
fade_target: 0
fade_end: 10.0
#split_delta_z: .01
split_delta_z: .025 #default
algorithm: bicubic
mesh_pps: 2,2
bicubic_tension: 0.2
probe_count: 10,10
#relative_reference_index: 24


[screws_tilt_adjust]
screw1: 85,30
screw1_name: front left screw
screw2: 255,30
screw2_name: front right screw
screw3: 255,200
screw3_name: rear right screw
screw4: 85,200
screw4_name: rear left screw
horizontal_move_z: 5
speed: 200
screw_thread: CW-M4



[virtual_sdcard]
path:/home/pi/Klipper_uploads





#####################################################################
# 	Macros
#####################################################################


[gcode_macro G29]
gcode:
#max_velocity: 10000
#max_accel: 6000
    G28
    G34
    BED_MESH_CALIBRATE

[gcode_macro G34]
gcode:
#max_velocity: 10000
#max_accel: 6000
    Z_TILT_ADJUST
    
[gcode_macro M48]
gcode:
    PROBE_ACCURACY 

[gcode_macro M141]
gcode:
  ;take the paramater S of M141 and store it as CHAMBER_TEMP. If S is not provided, set as 21c.
  {% set CHAMBER_TEMP = params.S|default(25)|float %}
  ;set heater my_chamber_heater equal to M141 S parameter by setting equal to CHAMBER_TEMP.
  SET_HEATER_TEMPERATURE HEATER=heater_chamber [TARGET={CHAMBER_TEMP}]

[gcode_macro M191]
gcode:
  ;take the paramater S of M141 and store it as CHAMBER_TEMP. If S is not provided, set as 21c.
  {% set CHAMBER_TEMP = params.S|default(25)|float %}
  ;set heater my_chamber_heater equal to M141 S parameter by setting equal to CHAMBER_TEMP.
  SET_HEATER_TEMPERATURE HEATER=heater_chamber [TARGET={CHAMBER_TEMP}]




#[gcode_macro G32]
#gcode:
   # BED_MESH_CLEAR
   # G28
  #  QUAD_GANTRY_LEVEL
  #  G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600

    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600

    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    TURN_OFF_HEATERS
    G28 X Y

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  M106 S0
  G91
  G0 z5 f800
  G90 
  CANCEL_PRINT_BASE


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"



